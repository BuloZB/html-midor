# Apache configuration file
# httpd.apache.org/docs/2.2/mod/quickreference.html



# ----------------------------------------------------------------------
# Gzip compression
# ----------------------------------------------------------------------

<IfModule mod_deflate.c>

	# Force deflate for mangled headers developer.yahoo.com/blogs/ydn/posts/2010/12/pushing-beyond-gzipping/
	<IfModule mod_setenvif.c>
		<IfModule mod_headers.c>
			SetEnvIfNoCase ^(Accept-EncodXng|X-cept-Encoding|X{15}|~{15}|-{15})$ ^((gzip|deflate)\s*,?\s*)+|[X~-]{4,13}$ HAVE_Accept-Encoding
			RequestHeader append Accept-Encoding "gzip,deflate" env=HAVE_Accept-Encoding
		</IfModule>
	</IfModule>

	# HTML, TXT, CSS, JavaScript, JSON, XML, HTC:
	<IfModule filter_module>
		FilterDeclare   COMPRESS
		FilterProvider  COMPRESS  DEFLATE resp=Content-Type $text/html
		FilterProvider  COMPRESS  DEFLATE resp=Content-Type $text/css
		FilterProvider  COMPRESS  DEFLATE resp=Content-Type $text/plain
		FilterProvider  COMPRESS  DEFLATE resp=Content-Type $text/xml
		FilterProvider  COMPRESS  DEFLATE resp=Content-Type $text/x-component
		FilterProvider  COMPRESS  DEFLATE resp=Content-Type $application/javascript
		FilterProvider  COMPRESS  DEFLATE resp=Content-Type $application/json
		FilterProvider  COMPRESS  DEFLATE resp=Content-Type $application/xml
		FilterProvider  COMPRESS  DEFLATE resp=Content-Type $application/xhtml+xml
		FilterProvider  COMPRESS  DEFLATE resp=Content-Type $application/rss+xml
		FilterProvider  COMPRESS  DEFLATE resp=Content-Type $application/atom+xml
		FilterProvider  COMPRESS  DEFLATE resp=Content-Type $application/vnd.ms-fontobject
		FilterProvider  COMPRESS  DEFLATE resp=Content-Type $image/svg+xml
		FilterProvider  COMPRESS  DEFLATE resp=Content-Type $image/x-icon
		FilterProvider  COMPRESS  DEFLATE resp=Content-Type $application/x-font-ttf
		FilterProvider  COMPRESS  DEFLATE resp=Content-Type $font/opentype
		FilterChain     COMPRESS
		FilterProtocol  COMPRESS  DEFLATE change=yes;byteranges=no
	</IfModule>

	<IfModule !mod_filter.c>
		# Legacy versions of Apache
		AddOutputFilterByType DEFLATE text/html text/plain text/css application/json
		AddOutputFilterByType DEFLATE application/javascript
		AddOutputFilterByType DEFLATE text/xml application/xml text/x-component
		AddOutputFilterByType DEFLATE application/xhtml+xml application/rss+xml application/atom+xml
		AddOutputFilterByType DEFLATE image/x-icon image/svg+xml application/vnd.ms-fontobject application/x-font-ttf font/opentype
	</IfModule>

</IfModule>



# ----------------------------------------------------------------------
# Expires headers (for better cache control)
# ----------------------------------------------------------------------

# These are pretty far-future expires headers.
# They assume you control versioning with cachebusting query params like
#	 <script src="application.js?20100608">

<IfModule mod_expires.c>
	ExpiresActive on

	# Perhaps better to whitelist expires rules? Perhaps.
	ExpiresDefault									"access plus 1 month"

	# cache.appcache needs re-requests in FF 3.6
	ExpiresByType text/cache-manifest				"access plus 0 seconds"

	# Your document html
	ExpiresByType text/html							"access plus 0 seconds"

	# Data
	ExpiresByType text/xml							"access plus 0 seconds"
	ExpiresByType application/xml					"access plus 0 seconds"
	ExpiresByType application/json					"access plus 0 seconds"

	# Feed
	ExpiresByType application/rss+xml				"access plus 1 hour"
	ExpiresByType application/atom+xml				"access plus 1 hour"

	# Favicon (cannot be renamed)
	ExpiresByType image/x-icon						"access plus 1 month"

	# Media: images, video, audio
	ExpiresByType image/gif							"access plus 1 month"
	ExpiresByType image/png							"access plus 1 month"
	ExpiresByType image/jpg							"access plus 1 month"
	ExpiresByType image/jpeg						"access plus 1 month"
	ExpiresByType video/ogg							"access plus 1 month"
	ExpiresByType audio/ogg							"access plus 1 month"
	ExpiresByType video/mp4							"access plus 1 month"
	ExpiresByType video/webm						"access plus 1 month"

	# HTC files	(css3pie)
	ExpiresByType text/x-component					"access plus 1 month"

	# Webfonts
	ExpiresByType application/x-font-ttf			"access plus 1 month"
	ExpiresByType font/opentype						"access plus 1 month"
	ExpiresByType application/x-font-woff			"access plus 1 month"
	ExpiresByType image/svg+xml						"access plus 1 month"
	ExpiresByType application/vnd.ms-fontobject		"access plus 1 month"

	# CSS and JavaScript
	ExpiresByType text/css							"access plus 1 month"
	ExpiresByType application/javascript			"access plus 1 month"
</IfModule>



# ----------------------------------------------------------------------
# ETag removal
# ----------------------------------------------------------------------

# Since we're sending far-future expires, we don't need ETags.
#  developer.yahoo.com/performance/rules.html#etags

<IfModule mod_headers.c>
	Header unset ETag
</IfModule>

FileETag None



# ----------------------------------------------------------------------
# rewrite to PHP frontcontroller
# ----------------------------------------------------------------------

<IfModule mod_rewrite.c>
	Options +FollowSymlinks

	RewriteEngine On
	# RewriteBase /

	RewriteCond %{REQUEST_FILENAME} !-f
	RewriteCond %{REQUEST_FILENAME} !-d
	RewriteRule !\.(pdf|js|ico|gif|jpg|png|css|rar|zip|tar\.gz)$ index.php [L]
</IfModule>



# ----------------------------------------------------------------------
# Suppress or force the "www." at the beginning of URLs
# ----------------------------------------------------------------------

# The same content should never be available under two different URLs - especially not with and
# without "www." at the beginning, since this can cause SEO problems (duplicate content).
# That's why you should choose one of the alternatives and redirect the other one.
# no-www.org/faq.php?q=class_b

# !!! IMPORTANT: NEVER USE BOTH RULES AT THE SAME TIME !!!

# ----------------------------------------------------------------------
# Option 1: rewrite "www.example.com -> example.com"

#<IfModule mod_rewrite.c>
#	RewriteCond %{HTTPS} !=on
#	RewriteCond %{HTTP_HOST} ^www\.(.+)$ [NC]
#	RewriteRule ^ http://%1%{REQUEST_URI} [R=301,L]
#</IfModule>

# ----------------------------------------------------------------------
# Option 2: rewrite "example.com -> www.example.com"
# Be aware that the following rule might not be a good idea if you
# use "real" subdomains for certain parts of your website.

#<IfModule mod_rewrite.c>
#	RewriteCond %{HTTPS} !=on
#	RewriteCond %{HTTP_HOST} !^www\..+$ [NC]
#	RewriteRule ^ http://www.%{HTTP_HOST}%{REQUEST_URI} [R=301,L]
#</IfModule>



# ----------------------------------------------------------------------
# Built-in filename-based cache busting
# ----------------------------------------------------------------------

# Route requests for `/css/style.20110203.css` to `/css/style.css`
# To understand why this is important and a better idea than all.css?v1231,
# read: github.com/h5bp/html5-boilerplate/wiki/Version-Control-with-Cachebusting

<IfModule mod_rewrite.c>
	RewriteCond %{REQUEST_FILENAME} !-f
	RewriteCond %{REQUEST_FILENAME} !-d
	RewriteRule ^(.+)\.(\d+)\.(js|css|png|jpg|gif)$ $1.$3 [L]
</IfModule>



# ----------------------------------------------------------------------
# A little more security
# ----------------------------------------------------------------------

# Disable directory listing
#<IfModule mod_autoindex.c>
#	Options -Indexes
#</IfModule>

# Block access to "hidden" directories whose names begin with a period. This
# includes directories used by version control systems such as Subversion or Git.
<IfModule mod_rewrite.c>
	RewriteCond %{SCRIPT_FILENAME} -d
	RewriteCond %{SCRIPT_FILENAME} -f
	RewriteRule "(^|/)\." - [F]
</IfModule>

# Block access to backup and source files
# This files may be left by some text/html editors and
# pose a great security danger, when someone can access them
<FilesMatch "(\.(bak|config|neon|sql|fla|psd|ini|log|sh|inc|swp|dist)|~)$">
	Order allow,deny
	Deny from all
	Satisfy All
</FilesMatch>

# Increase cookie security
<IfModule php5_module>
	php_value session.cookie_httponly true
</IfModule>



# for more smart tips, take a look to original HTML5Boilerpate .htaccess file
#  https://github.com/h5bp/html5-boilerplate/blob/master/.htaccess
